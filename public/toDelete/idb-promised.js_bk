// utils/idb.js

import { openDB,deleteDB } from 'idb';

const DATABASE_NAME = 'myDB';
const VERSION = 1;

// Initialize the database
async function initDB() {
  const db = await openDB(DATABASE_NAME, VERSION, {
    upgrade(db) {
      if (!db.objectStoreNames.contains(storeName)) {
        db.createObjectStore(storeName, { keyPath: 'id' });
        console.log('Database created successfully')
      }
    },
  });
  return db;
}

// Fetch all items from the IndexedDB
export async function getItemsFromIDB(storeName) {
  const db = await initDB();
  return db.getAll(storeName);
}

// Save an item to IndexedDB
export async function saveItemToIDB(storeName, item) {
  const db = await initDB();
  const tx = db.transaction(storeName, 'readwrite');
  await tx.store.put(item);
  return tx.done;
}

// Delete an item from IndexedDB
export async function deleteItemFromIDB(storeName, id) {
  const db = await initDB();
  const tx = db.transaction(storeName, 'readwrite');
  await tx.store.delete(id);
  return tx.done;
}

// Clear all items from IndexedDB
export async function clearItemsFromIDB(storeName) {
  const db = await initDB();
  const tx = db.transaction(storeName, 'readwrite');
  const store = tx.objectStore(storeName);
  await store.clear();
  return tx.done;
}

// Update an item in IndexedDB
export async function updateItemInIDB(storeName, item) {
  const db = await initDB();
  const tx = db.transaction(storeName, 'readwrite');
  await tx.store.put(item);
  return tx.done;
}

// Delete the database
export async function deleteDatabase(storName = DATABASE_NAME) {
  await deleteDB(storeName)
}


// // idb-promised.js
// import { openDB } from 'idb';

// async function initDB() {
//   const db = await openDB('NotesDB', 1, {
//     upgrade(db) {
//       if (!db.objectStoreNames.contains('notes')) {
//         db.createObjectStore('notes', { keyPath: 'id' });
//       }
//     },
//   });
//   return db;
// }

// async function getNotesFromDB() {
//   const db = await initDB();
//   return db.getAll('notes');
// }

// async function saveNoteToDB(note) {
//   const db = await initDB();
//   const tx = db.transaction('notes', 'readwrite');
//   tx.store.put(note);
//   return tx.done;
// }

// async function deleteNoteFromDB(id) {
//   const db = await initDB();
//   const tx = db.transaction('notes', 'readwrite');
//   tx.store.delete(id);
//   return tx.done;
// }

// export { getNotesFromDB, saveNoteToDB, deleteNoteFromDB };
